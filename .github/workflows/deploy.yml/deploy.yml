# name: Deploy

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up JDK
#         uses: actions/setup-java@v2
#         with:
#           java-version: 14

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14

#       - name: Build React
#         run: ./gradlew buildReact

#       - name: Deploy to S3 - Main
#         if: github.ref == 'refs/heads/main'
#         run: aws s3 sync build/ s3://spotify-main-master
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_EC2_METADATA_DISABLED: true
#           # Add your deployment steps here


# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "uat" ]
  pull_request:
    branches: [ "main", uat ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # steps:
    # - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    # - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Build React application
        run: npm run build

      - name: Deploy to S3 - UAT
        if: github.ref == 'refs/heads/uat'
        run: aws s3 sync build/ s3://spotify-uat
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Deploy to S3 - Main
        if: github.ref == 'refs/heads/main'
        run: aws s3 sync build/ s3://spotify-main-master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
